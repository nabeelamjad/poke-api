# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc_sub.proto
require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "RpcSub.GetPlayerResponse" do
    optional :unknown1, :int32, 1
    optional :profile, :message, 2, "RpcSub.Profile"
  end
  add_message "RpcSub.Profile" do
    optional :creation_time, :int64, 1
    optional :username, :string, 2
    optional :team, :enum, 5, "RpcEnum.TeamColor"
    optional :tutorial, :bytes, 7
    optional :avatar, :message, 8, "RpcSub.AvatarDetails"
    optional :poke_storage, :int32, 9
    optional :item_storage, :int32, 10
    optional :daily_bonus, :message, 11, "RpcSub.DailyBonus"
    optional :unknown12, :bytes, 12
    optional :unknown13, :bytes, 13
    repeated :currency, :message, 14, "RpcSub.Currency"
  end
  add_message "RpcSub.DailyBonus" do
    optional :NextCollectTimestampMs, :int64, 1
    optional :NextDefenderBonusCollectTimestampMs, :int64, 2
  end
  add_message "RpcSub.Currency" do
    optional :type, :string, 1
    optional :amount, :int32, 2
  end
  add_message "RpcSub.AvatarDetails" do
    optional :unknown2, :int32, 2
    optional :unknown3, :int32, 3
    optional :unknown9, :int32, 9
    optional :unknown10, :int32, 10
  end
  add_message "RpcSub.DownloadSettingsRequest" do
    optional :hash, :string, 1
  end
  add_message "RpcSub.GetInventoryResponse" do
    optional :success, :bool, 1
    optional :inventory_delta, :message, 2, "RpcSub.InventoryDelta"
  end
  add_message "RpcSub.InventoryDelta" do
    optional :original_timestamp_ms, :int64, 1
    optional :new_timestamp_ms, :int64, 2
    repeated :inventory_items, :message, 3, "RpcSub.InventoryItem"
  end
  add_message "RpcSub.InventoryItem" do
    optional :modified_timestamp_ms, :int64, 1
    optional :deleted_item_key, :int64, 2
    optional :inventory_item_data, :message, 3, "RpcSub.InventoryItemData"
  end
  add_message "RpcSub.InventoryItemData" do
    optional :pokemon, :message, 1, "RpcSub.PokemonData"
    optional :item, :message, 2, "RpcSub.Item"
    optional :pokedex_entry, :message, 3, "RpcSub.PokedexEntry"
    optional :player_stats, :message, 4, "RpcSub.PlayerStats"
    optional :player_currency, :message, 5, "RpcSub.PlayerCurrency"
    optional :player_camera, :message, 6, "RpcSub.PlayerCamera"
    optional :inventory_upgrades, :message, 7, "RpcSub.InventoryUpgrades"
    optional :applied_items, :message, 8, "RpcSub.AppliedItems"
    optional :egg_incubators, :message, 9, "RpcSub.EggIncubators"
    optional :pokemon_family, :message, 10, "RpcSub.PokemonFamily"
  end
  add_message "RpcSub.Pokemon" do
    optional :id, :int32, 1
    optional :pokemon_type, :enum, 2, "RpcEnum.PokemonId"
    optional :cp, :int32, 3
    optional :stamina, :int32, 4
    optional :stamina_max, :int32, 5
    optional :move_1, :enum, 6, "RpcEnum.PokemonMove"
    optional :move_2, :enum, 7, "RpcEnum.PokemonMove"
    optional :deployed_fort_id, :int32, 8
    optional :owner_name, :string, 9
    optional :is_egg, :bool, 10
    optional :egg_km_walked_target, :int32, 11
    optional :egg_km_walked_start, :int32, 12
    optional :origin, :int32, 14
    optional :height_m, :float, 15
    optional :weight_kg, :float, 16
    optional :individual_attack, :int32, 17
    optional :individual_defense, :int32, 18
    optional :individual_stamina, :int32, 19
    optional :cp_multiplier, :int32, 20
    optional :pokeball, :int32, 21
    optional :captured_cell_id, :uint64, 22
    optional :battles_attacked, :int32, 23
    optional :battles_defended, :int32, 24
    optional :egg_incubator_id, :int32, 25
    optional :creation_time_ms, :uint64, 26
    optional :num_upgrades, :int32, 27
    optional :additional_cp_multiplier, :int32, 28
    optional :favorite, :int32, 29
    optional :nickname, :string, 30
    optional :from_fort, :int32, 31
  end
  add_message "RpcSub.Item" do
    optional :item, :enum, 1, "RpcEnum.ItemId"
    optional :count, :int32, 2
    optional :unseen, :bool, 3
  end
  add_message "RpcSub.PokedexEntry" do
    optional :pokedex_entry_number, :int32, 1
    optional :times_encountered, :int32, 2
    optional :times_captured, :int32, 3
    optional :evolution_stone_pieces, :int32, 4
    optional :evolution_stones, :int32, 5
  end
  add_message "RpcSub.PlayerStats" do
    optional :level, :int32, 1
    optional :experience, :int64, 2
    optional :prev_level_xp, :int64, 3
    optional :next_level_xp, :int64, 4
    optional :km_walked, :float, 5
    optional :pokemons_encountered, :int32, 6
    optional :unique_pokedex_entries, :int32, 7
    optional :pokemons_captured, :int32, 8
    optional :evolutions, :int32, 9
    optional :poke_stop_visits, :int32, 10
    optional :pokeballs_thrown, :int32, 11
    optional :eggs_hatched, :int32, 12
    optional :big_magikarp_caught, :int32, 13
    optional :battle_attack_won, :int32, 14
    optional :battle_attack_total, :int32, 15
    optional :battle_defended_won, :int32, 16
    optional :battle_training_won, :int32, 17
    optional :battle_training_total, :int32, 18
    optional :prestige_raised_total, :int32, 19
    optional :prestige_dropped_total, :int32, 20
    optional :pokemon_deployed, :int32, 21
    optional :pokemon_caught_by_type, :bytes, 22
    optional :small_rattata_caught, :int32, 23
  end
  add_message "RpcSub.PlayerCurrency" do
    optional :gems, :int32, 1
  end
  add_message "RpcSub.PlayerCamera" do
    optional :is_default_camera, :bool, 1
  end
  add_message "RpcSub.InventoryUpgrades" do
    repeated :inventory_upgrades, :message, 1, "RpcSub.InventoryUpgrade"
  end
  add_message "RpcSub.InventoryUpgrade" do
    optional :item, :enum, 1, "RpcEnum.ItemType"
    optional :upgrade_type, :enum, 2, "RpcEnum.InventoryUpgradeType"
    optional :additional_storage, :int32, 3
  end
  add_message "RpcSub.AppliedItems" do
    optional :item, :message, 4, "RpcSub.AppliedItem"
  end
  add_message "RpcSub.AppliedItem" do
    optional :item_type, :enum, 1, "RpcEnum.ItemId"
    optional :item_type_category, :enum, 2, "RpcEnum.ItemType"
    optional :expire_ms, :int64, 3
    optional :applied_ms, :int64, 4
  end
  add_message "RpcSub.EggIncubators" do
    optional :egg_incubator, :message, 1, "RpcSub.EggIncubator"
  end
  add_message "RpcSub.EggIncubator" do
    optional :item_id, :string, 1
    optional :item_type, :enum, 2, "RpcEnum.ItemType"
    optional :incubator_type, :enum, 3, "RpcEnum.EggIncubatorType"
    optional :uses_remaining, :int32, 4
    optional :pokemon_id, :int64, 5
    optional :start_km_walked, :double, 6
    optional :target_km_walked, :double, 7
  end
  add_message "RpcSub.PokemonFamily" do
    optional :family_id, :enum, 1, "RpcEnum.PokemonFamilyId"
    optional :candy, :int32, 2
  end
  add_message "RpcSub.GetMapObjectsRequest" do
    repeated :cell_id, :uint64, 1
    repeated :since_timestamp_ms, :int64, 2
    optional :latitude, :double, 3
    optional :longitude, :double, 4
  end
  add_message "RpcSub.GetMapObjectsResponse" do
    repeated :map_cells, :message, 1, "RpcSub.MapCell"
    optional :status, :enum, 2, "RpcEnum.MapObjectsStatus"
  end
  add_message "RpcSub.MapCell" do
    optional :s2_cell_id, :uint64, 1
    optional :current_timestamp_ms, :int64, 2
    repeated :forts, :message, 3, "RpcSub.FortData"
    repeated :spawn_points, :message, 4, "RpcSub.SpawnPoint"
    repeated :deleted_objects, :string, 6
    optional :is_truncated_list, :bool, 7
    repeated :fort_summaries, :message, 8, "RpcSub.FortSummary"
    repeated :decimated_spawn_points, :message, 9, "RpcSub.SpawnPoint"
    repeated :wild_pokemons, :message, 5, "RpcSub.WildPokemon"
    repeated :catchable_pokemons, :message, 10, "RpcSub.MapPokemon"
    repeated :nearby_pokemons, :message, 11, "RpcSub.NearbyPokemon"
  end
  add_message "RpcSub.FortData" do
    optional :id, :string, 1
    optional :last_modified_timestamp_ms, :int64, 2
    optional :latitude, :double, 3
    optional :longitude, :double, 4
    optional :enabled, :bool, 8
    optional :type, :enum, 9, "RpcEnum.FortType"
    optional :owned_by_team, :enum, 5, "RpcEnum.TeamColor"
    optional :guard_pokemon_id, :enum, 6, "RpcEnum.PokemonId"
    optional :guard_pokemon_cp, :int32, 7
    optional :gym_points, :int64, 10
    optional :is_in_battle, :bool, 11
    optional :cooldown_complete_timestamp_ms, :int64, 14
    optional :sponsor, :enum, 15, "RpcEnum.FortSponsor"
    optional :rendering_type, :enum, 16, "RpcEnum.FortRenderingType"
    optional :active_fort_modifier, :bytes, 12
    optional :lure_info, :message, 13, "RpcSub.FortLureInfo"
  end
  add_message "RpcSub.FortLureInfo" do
    optional :fort_id, :string, 1
    optional :unknown2, :double, 2
    optional :active_pokemon_id, :enum, 3, "RpcEnum.PokemonId"
    optional :lure_expires_timestamp_ms, :int64, 4
  end
  add_message "RpcSub.SpawnPoint" do
    optional :latitude, :double, 2
    optional :longitude, :double, 3
  end
  add_message "RpcSub.FortSummary" do
    optional :fort_summary_id, :int32, 1
    optional :last_modified_timestamp_ms, :int32, 2
    optional :latitude, :int32, 3
    optional :longitude, :int32, 4
  end
  add_message "RpcSub.WildPokemon" do
    optional :encounter_id, :fixed64, 1
    optional :last_modified_timestamp_ms, :int64, 2
    optional :latitude, :double, 3
    optional :longitude, :double, 4
    optional :spawnpoint_id, :string, 5
    optional :pokemon_data, :message, 7, "RpcSub.PokemonData"
    optional :time_till_hidden_ms, :int32, 11
  end
  add_message "RpcSub.PokemonData" do
    optional :id, :fixed64, 1
    optional :pokemon_id, :enum, 2, "RpcEnum.PokemonId"
    optional :cp, :int32, 3
    optional :stamina, :int32, 4
    optional :stamina_max, :int32, 5
    optional :move_1, :enum, 6, "RpcEnum.PokemonMove"
    optional :move_2, :enum, 7, "RpcEnum.PokemonMove"
    optional :deployed_fort_id, :int32, 8
    optional :owner_name, :string, 9
    optional :is_egg, :bool, 10
    optional :egg_km_walked_target, :int32, 11
    optional :egg_km_walked_start, :int32, 12
    optional :origin, :int32, 14
    optional :height_m, :float, 15
    optional :weight_kg, :float, 16
    optional :individual_attack, :int32, 17
    optional :individual_defense, :int32, 18
    optional :individual_stamina, :int32, 19
    optional :cp_multiplier, :int32, 20
    optional :pokeball, :int32, 21
    optional :captured_cell_id, :uint64, 22
    optional :battles_attacked, :int32, 23
    optional :battles_defended, :int32, 24
    optional :egg_incubator_id, :int32, 25
    optional :creation_time_ms, :uint64, 26
    optional :num_upgrades, :int32, 27
    optional :additional_cp_multiplier, :int32, 28
    optional :favorite, :int32, 29
    optional :nickname, :string, 30
    optional :from_fort, :int32, 31
  end
  add_message "RpcSub.MapPokemon" do
    optional :spawnpoint_id, :string, 1
    optional :encounter_id, :fixed64, 2
    optional :pokemon_id, :enum, 3, "RpcEnum.PokemonId"
    optional :expiration_timestamp_ms, :int64, 4
    optional :latitude, :double, 5
    optional :longitude, :double, 6
  end
  add_message "RpcSub.NearbyPokemon" do
    optional :pokemon_id, :enum, 1, "RpcEnum.PokemonId"
    optional :distance_in_meters, :float, 2
    optional :encounter_id, :fixed64, 3
  end
  add_message "RpcSub.DownloadSettingsResponse" do
    optional :error, :string, 1
    optional :hash, :string, 2
    optional :settings, :message, 3, "RpcSub.GlobalSettings"
  end
  add_message "RpcSub.GlobalSettings" do
    optional :fort_settings, :message, 2, "RpcSub.FortSettings"
    optional :map_settings, :message, 3, "RpcSub.MapSettings"
    optional :level_settings, :message, 4, "RpcSub.LevelSettings"
    optional :inventory_settings, :message, 5, "RpcSub.InventorySettings"
    optional :minimum_client_version, :string, 6
  end
  add_message "RpcSub.FortSettings" do
    optional :interaction_range_meters, :double, 1
    optional :max_total_deployed_pokemon, :int32, 2
    optional :max_player_deployed_pokemon, :int32, 3
    optional :deploy_stamina_multiplier, :double, 4
    optional :deploy_attack_multiplier, :double, 5
    optional :far_interaction_range_meters, :double, 6
  end
  add_message "RpcSub.MapSettings" do
    optional :pokemon_visible_range, :double, 1
    optional :poke_nav_range_meters, :double, 2
    optional :encounter_range_meters, :double, 3
    optional :get_map_objects_min_refresh_seconds, :float, 4
    optional :get_map_objects_max_refresh_seconds, :float, 5
    optional :get_map_objects_min_distance_meters, :float, 6
    optional :google_maps_api_key, :string, 7
  end
  add_message "RpcSub.LevelSettings" do
    optional :trainer_cp_modifier, :double, 2
    optional :trainer_difficulty_modifier, :double, 3
  end
  add_message "RpcSub.InventorySettings" do
    optional :max_pokemon, :int32, 1
    optional :max_bag_items, :int32, 2
    optional :base_pokemon, :int32, 3
    optional :base_bag_items, :int32, 4
    optional :base_eggs, :int32, 5
  end
  add_message "RpcSub.PlayerUpdateRequest" do
    optional :latitude, :double, 1
    optional :longitude, :double, 2
  end
  add_message "RpcSub.PlayerUpdateResponse" do
    repeated :wild_pokemons, :message, 1, "RpcSub.WildPokemon"
    repeated :forts, :message, 2, "RpcSub.FortData"
    optional :forts_nearby, :int32, 3
  end
  add_message "RpcSub.DownloadItemTemplatesRequest" do
  end
  add_message "RpcSub.DownloadItemTemplatesResponse" do
    optional :success, :bool, 1
    repeated :item_templates, :message, 2, "RpcSub.DownloadItemTemplatesResponse.ItemTemplate"
    optional :timestamp_ms, :uint64, 3
  end
  add_message "RpcSub.DownloadItemTemplatesResponse.ItemTemplate" do
    optional :template_id, :string, 1
    optional :pokemon_settings, :message, 2, "RpcSub.PokemonSettings"
    optional :item_settings, :message, 3, "RpcSub.ItemSettings"
    optional :move_settings, :message, 4, "RpcSub.MoveSettings"
    optional :move_sequence_settings, :message, 5, "RpcSub.MoveSequenceSettings"
    optional :type_effective, :message, 8, "RpcSub.TypeEffectiveSettings"
    optional :badge_settings, :message, 10, "RpcSub.BadgeSettings"
    optional :camera, :message, 11, "RpcSub.CameraSettings"
    optional :player_level, :message, 12, "RpcSub.PlayerLevelSettings"
    optional :gym_level, :message, 13, "RpcSub.GymLevelSettings"
    optional :battle_settings, :message, 14, "RpcSub.GymBattleSettings"
    optional :encounter_settings, :message, 15, "RpcSub.EncounterSettings"
    optional :iap_item_display, :message, 16, "RpcSub.IapItemDisplay"
    optional :iap_settings, :message, 17, "RpcSub.IapSettings"
    optional :pokemon_upgrades, :message, 18, "RpcSub.PokemonUpgradeSettings"
    optional :equipped_badges, :message, 19, "RpcSub.EquippedBadgeSettings"
  end
  add_message "RpcSub.UseItemCaptureRequest" do
    optional :item_id, :enum, 1, "RpcEnum.ItemId"
    optional :encounter_id, :fixed64, 2
    optional :spawn_point_guid, :string, 3
  end
  add_message "RpcSub.UseItemCaptureResponse" do
    optional :success, :bool, 1
    optional :item_capture_mult, :double, 2
    optional :item_flee_mult, :double, 3
    optional :stop_movement, :bool, 4
    optional :stop_attack, :bool, 5
    optional :target_max, :bool, 6
    optional :target_slow, :bool, 7
  end
  add_message "RpcSub.ReleasePokemonRequest" do
    optional :pokemon_id, :fixed64, 1
  end
  add_message "RpcSub.ReleasePokemonResponse" do
    optional :result, :enum, 1, "RpcSub.ReleasePokemonResponse.Result"
    optional :candy_awarded, :int32, 2
  end
  add_enum "RpcSub.ReleasePokemonResponse.Result" do
    value :UNSET, 0
    value :SUCCESS, 1
    value :POKEMON_DEPLOYED, 2
    value :FAILED, 3
    value :ERROR_POKEMON_IS_EGG, 4
  end
  add_message "RpcSub.GetHatchedEggsRequest" do
  end
  add_message "RpcSub.GetHatchedEggsResponse" do
    optional :success, :bool, 1
    repeated :pokemon_id, :uint64, 2
    repeated :experience_awarded, :int32, 3
    repeated :candy_awarded, :int32, 4
    repeated :stardust_awarded, :int32, 5
  end
  add_message "RpcSub.FortSearchRequest" do
    optional :fort_id, :string, 1
    optional :player_latitude, :double, 2
    optional :player_longitude, :double, 3
    optional :fort_latitude, :double, 4
    optional :fort_longitude, :double, 5
  end
  add_message "RpcSub.FortSearchResponse" do
    optional :result, :enum, 1, "RpcSub.FortSearchResponse.Result"
    repeated :items_awarded, :message, 2, "RpcSub.FortSearchResponse.ItemAward"
    optional :gems_awarded, :int32, 3
    optional :pokemon_data_egg, :message, 4, "RpcSub.PokemonData"
    optional :experience_awarded, :int32, 5
    optional :cooldown_complete_timestamp_ms, :int64, 6
    optional :chain_hack_sequence_number, :int32, 7
  end
  add_message "RpcSub.FortSearchResponse.ItemAward" do
    optional :item_id, :enum, 1, "RpcEnum.ItemId"
    optional :item_count, :int32, 2
  end
  add_enum "RpcSub.FortSearchResponse.Result" do
    value :NO_RESULT_SET, 0
    value :SUCCESS, 1
    value :OUT_OF_RANGE, 2
    value :IN_COOLDOWN_PERIOD, 3
    value :INVENTORY_FULL, 4
  end
  add_message "RpcSub.FortDetailsRequest" do
    optional :fort_id, :string, 1
    optional :latitude, :double, 2
    optional :longitude, :double, 3
  end
  add_message "RpcSub.FortDetailsResponse" do
    optional :fort_id, :string, 1
    optional :team_color, :enum, 2, "RpcEnum.TeamColor"
    optional :pokemon_data, :message, 3, "RpcSub.PokemonData"
    optional :name, :string, 4
    repeated :image_urls, :string, 5
    optional :fp, :int32, 6
    optional :stamina, :int32, 7
    optional :max_stamina, :int32, 8
    optional :type, :enum, 9, "RpcEnum.FortType"
    optional :latitude, :double, 10
    optional :longitude, :double, 11
    optional :description, :string, 12
    repeated :modifiers, :message, 13, "RpcSub.FortModifier"
  end
  add_message "RpcSub.FortModifier" do
    optional :item_id, :enum, 1, "RpcEnum.ItemId"
    optional :expiration_timestamp_ms, :int64, 2
    optional :deployer_player_codename, :string, 3
  end
  add_message "RpcSub.EncounterRequest" do
    optional :encounter_id, :fixed64, 1
    optional :spawnpoint_id, :string, 2
    optional :player_latitude, :double, 3
    optional :player_longitude, :double, 4
  end
  add_message "RpcSub.EncounterResponse" do
    optional :wild_pokemon, :message, 1, "RpcSub.WildPokemon"
    optional :background, :enum, 2, "RpcSub.EncounterResponse.Background"
    optional :status, :enum, 3, "RpcSub.EncounterResponse.Status"
    optional :capture_probability, :message, 4, "RpcSub.CaptureProbability"
  end
  add_enum "RpcSub.EncounterResponse.Background" do
    value :PARK, 0
    value :DESERT, 1
  end
  add_enum "RpcSub.EncounterResponse.Status" do
    value :ENCOUNTER_ERROR, 0
    value :ENCOUNTER_SUCCESS, 1
    value :ENCOUNTER_NOT_FOUND, 2
    value :ENCOUNTER_CLOSED, 3
    value :ENCOUNTER_POKEMON_FLED, 4
    value :ENCOUNTER_NOT_IN_RANGE, 5
    value :ENCOUNTER_ALREADY_HAPPENED, 6
    value :POKEMON_INVENTORY_FULL, 7
  end
  add_message "RpcSub.CaptureProbability" do
    repeated :pokeball_type, :enum, 1, "RpcEnum.ItemId"
    repeated :capture_probability, :float, 2
    optional :reticle_difficulty_scale, :double, 12
  end
  add_message "RpcSub.DiskEncounterRequest" do
    optional :encounter_id, :fixed64, 1
    optional :fort_id, :string, 2
    optional :player_latitude, :double, 3
    optional :player_longitude, :double, 4
  end
  add_message "RpcSub.DiskEncounterResponse" do
    optional :result, :enum, 1, "RpcSub.DiskEncounterResponse.Result"
    optional :pokemon_data, :message, 2, "RpcSub.PokemonData"
    optional :capture_probability, :message, 3, "RpcSub.CaptureProbability"
  end
  add_enum "RpcSub.DiskEncounterResponse.Result" do
    value :UNKNOWN, 0
    value :SUCCESS, 1
    value :NOT_AVAILABLE, 2
    value :NOT_IN_RANGE, 3
    value :ENCOUNTER_ALREADY_FINISHED, 4
    value :POKEMON_INVENTORY_FULL, 5
  end
  add_message "RpcSub.CatchPokemonRequest" do
    optional :encounter_id, :fixed64, 1
    optional :pokeball, :int32, 2
    optional :normalized_reticle_size, :double, 3
    optional :spawn_point_guid, :string, 4
    optional :hit_pokemon, :bool, 5
    optional :spin_modifier, :double, 6
    optional :NormalizedHitPosition, :double, 7
  end
  add_message "RpcSub.CatchPokemonResponse" do
    optional :status, :enum, 1, "RpcSub.CatchPokemonResponse.CatchStatus"
    optional :miss_percent, :double, 2
    optional :captured_pokemon_id, :uint64, 3
    optional :scores, :message, 4, "RpcSub.CaptureScore"
  end
  add_enum "RpcSub.CatchPokemonResponse.CatchStatus" do
    value :CATCH_ERROR, 0
    value :CATCH_SUCCESS, 1
    value :CATCH_ESCAPE, 2
    value :CATCH_FLEE, 3
    value :CATCH_MISSED, 4
  end
  add_message "RpcSub.CaptureScore" do
    repeated :activity_type, :enum, 1, "RpcEnum.ActivityType"
    repeated :xp, :int32, 2
    repeated :candy, :int32, 3
    repeated :stardust, :int32, 4
  end
  add_message "RpcSub.CheckAwardedBadgesRequest" do
  end
  add_message "RpcSub.CheckAwardedBadgesResponse" do
    optional :success, :bool, 1
    repeated :awarded_badges, :enum, 2, "RpcEnum.BadgeType"
    repeated :awarded_badge_levels, :int32, 3
  end
  add_message "RpcSub.EquippedBadgeSettings" do
    optional :equip_badge_cooldown_ms, :int64, 1
    repeated :catch_probability_bonus, :float, 2
    repeated :flee_probability_bonus, :float, 3
  end
  add_message "RpcSub.PokemonUpgradeSettings" do
    optional :upgrades_per_level, :int32, 1
    optional :allowed_levels_above_player, :int32, 2
    repeated :candy_cost, :int32, 3
    repeated :stardust_cost, :int32, 4
  end
  add_message "RpcSub.IapSettings" do
    optional :daily_bonus_coins, :int32, 1
    repeated :daily_defender_bonus_per_pokemon, :int32, 2
    optional :daily_defender_bonus_max_defenders, :int32, 3
    repeated :daily_defender_bonus_currency, :string, 4
    optional :min_time_between_claims_ms, :int64, 5
    optional :daily_bonus_enabled, :bool, 6
    optional :daily_defender_bonus_enabled, :bool, 7
  end
  add_message "RpcSub.IapItemDisplay" do
    optional :sku, :string, 1
    optional :category, :enum, 2, "RpcEnum.HoloIapItemCategory"
    optional :sort_order, :int32, 3
    repeated :item_ids, :enum, 4, "RpcEnum.ItemId"
    repeated :counts, :int32, 5
  end
  add_message "RpcSub.EncounterSettings" do
    optional :spin_bonus_threshold, :float, 1
    optional :excellent_throw_threshold, :float, 2
    optional :great_throw_threshold, :float, 3
    optional :nice_throw_threshold, :float, 4
    optional :milestone_threshold, :int32, 5
  end
  add_message "RpcSub.GymBattleSettings" do
    optional :energy_per_sec, :float, 1
    optional :dodge_energy_cost, :float, 2
    optional :retarget_seconds, :float, 3
    optional :enemy_attack_interval, :float, 4
    optional :attack_server_interval, :float, 5
    optional :round_duration_seconds, :float, 6
    optional :bonus_time_per_ally_seconds, :float, 7
    optional :maximum_attackers_per_battle, :int32, 8
    optional :same_type_attack_bonus_multiplier, :float, 9
    optional :maximum_energy, :int32, 10
    optional :energy_delta_per_health_lost, :float, 11
    optional :dodge_duration_ms, :int32, 12
    optional :minimum_player_level, :int32, 13
    optional :swap_duration_ms, :int32, 14
  end
  add_message "RpcSub.GymLevelSettings" do
    repeated :required_experience, :int32, 1
    repeated :leader_slots, :int32, 2
    repeated :trainer_slots, :int32, 3
    repeated :search_roll_bonus, :int32, 4
  end
  add_message "RpcSub.PlayerLevelSettings" do
    repeated :rank_num, :int32, 1
    repeated :required_experience, :int32, 2
    repeated :cp_multiplier, :float, 3
    optional :max_egg_player_level, :int32, 4
    optional :max_encounter_player_level, :int32, 5
  end
  add_message "RpcSub.CameraSettings" do
    optional :next_camera, :string, 1
    repeated :interpolation, :enum, 2, "RpcEnum.CameraInterpolation"
    repeated :target_type, :enum, 3, "RpcEnum.CameraTarget"
    repeated :ease_in_speed, :float, 4
    repeated :east_out_speed, :float, 5
    repeated :duration_seconds, :float, 6
    repeated :wait_seconds, :float, 7
    repeated :transition_seconds, :float, 8
    repeated :angle_degree, :float, 9
    repeated :angle_offset_degree, :float, 10
    repeated :pitch_degree, :float, 11
    repeated :pitch_offset_degree, :float, 12
    repeated :roll_degree, :float, 13
    repeated :distance_meters, :float, 14
    repeated :height_percent, :float, 15
    repeated :vert_ctr_ratio, :float, 16
  end
  add_message "RpcSub.BadgeSettings" do
    optional :badge_type, :enum, 1, "RpcEnum.BadgeType"
    optional :badge_rank, :int32, 2
    repeated :targets, :int32, 3
  end
  add_message "RpcSub.TypeEffectiveSettings" do
    repeated :attack_scalar, :float, 1
    optional :attack_type, :enum, 2, "RpcEnum.PokemonType"
  end
  add_message "RpcSub.MoveSequenceSettings" do
    repeated :sequence, :string, 1
  end
  add_message "RpcSub.MoveSettings" do
    optional :movement_id, :enum, 1, "RpcEnum.PokemonMovementType"
    optional :animation_id, :int32, 2
    optional :pokemon_type, :enum, 3, "RpcEnum.PokemonType"
    optional :power, :float, 4
    optional :accuracy_chance, :float, 5
    optional :critical_chance, :float, 6
    optional :heal_scalar, :float, 7
    optional :stamina_loss_scalar, :float, 8
    optional :trainer_level_min, :int32, 9
    optional :trainer_level_max, :int32, 10
    optional :vfx_name, :string, 11
    optional :duration_ms, :int32, 12
    optional :damage_window_start_ms, :int32, 13
    optional :damage_window_end_ms, :int32, 14
    optional :energy_delta, :int32, 15
  end
  add_message "RpcSub.PokemonSettings" do
    optional :pokemon_id, :enum, 1, "RpcEnum.PokemonId"
    optional :model_scale, :float, 3
    optional :type, :enum, 4, "RpcEnum.PokemonType"
    optional :type_2, :enum, 5, "RpcEnum.PokemonType"
    optional :camera, :message, 6, "RpcSub.CameraAttributes"
    optional :encounter, :message, 7, "RpcSub.EncounterAttributes"
    optional :stats, :message, 8, "RpcSub.StatsAttributes"
    repeated :quick_moves, :enum, 9, "RpcEnum.PokemonMove"
    repeated :cinematic_moves, :enum, 10, "RpcEnum.PokemonMove"
    repeated :animation_time, :float, 11
    repeated :evolution_ids, :enum, 12, "RpcEnum.PokemonId"
    optional :evolution_pips, :int32, 13
    optional :class, :enum, 14, "RpcEnum.PokemonClass"
    optional :pokedex_height_m, :float, 15
    optional :pokedex_weight_kg, :float, 16
    optional :parent_pokemon_id, :enum, 17, "RpcEnum.PokemonId"
    optional :height_std_dev, :float, 18
    optional :weight_std_dev, :float, 19
    optional :km_distance_to_hatch, :float, 20
    optional :family_id, :enum, 21, "RpcEnum.PokemonFamilyId"
    optional :candy_to_evolve, :int32, 22
  end
  add_message "RpcSub.CameraAttributes" do
    optional :disk_radius_m, :float, 1
    optional :cylinder_radius_m, :float, 2
    optional :cylinder_height_m, :float, 3
    optional :cylinder_ground_m, :float, 4
    optional :shoulder_mode_scale, :float, 5
  end
  add_message "RpcSub.EncounterAttributes" do
    optional :base_capture_rate, :float, 1
    optional :base_flee_rate, :float, 2
    optional :collision_radius_m, :float, 3
    optional :collision_height_m, :float, 4
    optional :collision_head_radius_m, :float, 5
    optional :movement_type, :enum, 6, "RpcEnum.PokemonMovementType"
    optional :movement_timer_s, :float, 7
    optional :jump_time_s, :float, 8
    optional :attack_timer_s, :float, 9
  end
  add_message "RpcSub.StatsAttributes" do
    optional :base_stamina, :int32, 1
    optional :base_attack, :int32, 2
    optional :base_defense, :int32, 3
    optional :dodge_energy_delta, :int32, 8
  end
  add_message "RpcSub.ItemSettings" do
    optional :item_id, :enum, 1, "RpcEnum.ItemId"
    optional :item_type, :enum, 2, "RpcEnum.ItemType"
    optional :category, :enum, 3, "RpcEnum.ItemCategory"
    optional :drop_freq, :float, 4
    optional :drop_trainer_level, :int32, 5
    optional :pokeball, :message, 6, "RpcSub.PokeballAttributes"
    optional :potion, :message, 7, "RpcSub.PotionAttributes"
    optional :revive, :message, 8, "RpcSub.ReviveAttributes"
    optional :battle, :message, 9, "RpcSub.BattleAttributes"
    optional :food, :message, 10, "RpcSub.FoodAttributes"
    optional :inventory_upgrade, :message, 11, "RpcSub.InventoryUpgradeAttributes"
    optional :xp_boost, :message, 12, "RpcSub.ExperienceBoostAttributes"
    optional :incense, :message, 13, "RpcSub.IncenseAttributes"
    optional :egg_incubator, :message, 14, "RpcSub.EggIncubatorAttributes"
    optional :fort_modifier, :message, 15, "RpcSub.FortModifierAttributes"
  end
  add_message "RpcSub.BattleAttributes" do
    optional :sta_percent, :float, 1
  end
  add_message "RpcSub.EggIncubatorAttributes" do
    optional :incubator_type, :enum, 1, "RpcEnum.EggIncubatorType"
    optional :uses, :int32, 2
    optional :distance_multiplier, :float, 3
  end
  add_message "RpcSub.ExperienceBoostAttributes" do
    optional :xp_multiplier, :float, 1
    optional :boost_duration_ms, :int32, 2
  end
  add_message "RpcSub.FoodAttributes" do
    repeated :item_effect, :enum, 1, "RpcEnum.ItemEffect"
    repeated :item_effect_percent, :float, 2
    optional :growth_percent, :float, 3
  end
  add_message "RpcSub.FortModifierAttributes" do
    optional :modifier_lifetime_seconds, :int32, 1
    optional :troy_disk_num_pokemon_spawned, :int32, 2
  end
  add_message "RpcSub.IncenseAttributes" do
    optional :incense_lifetime_seconds, :int32, 1
    repeated :pokemon_type, :enum, 2, "RpcEnum.PokemonType"
    optional :pokemon_incense_type_probability, :float, 3
    optional :standing_time_between_encounters_seconds, :int32, 4
    optional :moving_time_between_encounter_seconds, :int32, 5
    optional :distance_required_for_shorter_interval_meters, :int32, 6
    optional :pokemon_attracted_length_sec, :int32, 7
  end
  add_message "RpcSub.InventoryUpgradeAttributes" do
    optional :additional_storage, :int32, 1
    optional :upgrade_type, :enum, 2, "RpcEnum.InventoryUpgradeType"
  end
  add_message "RpcSub.PokeballAttributes" do
    optional :item_effect, :enum, 1, "RpcEnum.ItemEffect"
    optional :capture_multi, :float, 2
    optional :capture_multi_effect, :float, 3
    optional :item_effect_mod, :float, 4
  end
  add_message "RpcSub.PotionAttributes" do
    optional :sta_percent, :float, 1
    optional :sta_amount, :int32, 2
  end
  add_message "RpcSub.ReviveAttributes" do
    optional :sta_percent, :float, 1
  end
end

module RpcSub
  GetPlayerResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.GetPlayerResponse").msgclass
  Profile = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.Profile").msgclass
  DailyBonus = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.DailyBonus").msgclass
  Currency = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.Currency").msgclass
  AvatarDetails = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.AvatarDetails").msgclass
  DownloadSettingsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.DownloadSettingsRequest").msgclass
  GetInventoryResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.GetInventoryResponse").msgclass
  InventoryDelta = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.InventoryDelta").msgclass
  InventoryItem = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.InventoryItem").msgclass
  InventoryItemData = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.InventoryItemData").msgclass
  Pokemon = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.Pokemon").msgclass
  Item = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.Item").msgclass
  PokedexEntry = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.PokedexEntry").msgclass
  PlayerStats = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.PlayerStats").msgclass
  PlayerCurrency = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.PlayerCurrency").msgclass
  PlayerCamera = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.PlayerCamera").msgclass
  InventoryUpgrades = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.InventoryUpgrades").msgclass
  InventoryUpgrade = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.InventoryUpgrade").msgclass
  AppliedItems = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.AppliedItems").msgclass
  AppliedItem = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.AppliedItem").msgclass
  EggIncubators = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.EggIncubators").msgclass
  EggIncubator = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.EggIncubator").msgclass
  PokemonFamily = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.PokemonFamily").msgclass
  GetMapObjectsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.GetMapObjectsRequest").msgclass
  GetMapObjectsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.GetMapObjectsResponse").msgclass
  MapCell = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.MapCell").msgclass
  FortData = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.FortData").msgclass
  FortLureInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.FortLureInfo").msgclass
  SpawnPoint = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.SpawnPoint").msgclass
  FortSummary = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.FortSummary").msgclass
  WildPokemon = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.WildPokemon").msgclass
  PokemonData = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.PokemonData").msgclass
  MapPokemon = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.MapPokemon").msgclass
  NearbyPokemon = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.NearbyPokemon").msgclass
  DownloadSettingsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.DownloadSettingsResponse").msgclass
  GlobalSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.GlobalSettings").msgclass
  FortSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.FortSettings").msgclass
  MapSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.MapSettings").msgclass
  LevelSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.LevelSettings").msgclass
  InventorySettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.InventorySettings").msgclass
  PlayerUpdateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.PlayerUpdateRequest").msgclass
  PlayerUpdateResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.PlayerUpdateResponse").msgclass
  DownloadItemTemplatesRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.DownloadItemTemplatesRequest").msgclass
  DownloadItemTemplatesResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.DownloadItemTemplatesResponse").msgclass
  DownloadItemTemplatesResponse::ItemTemplate = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.DownloadItemTemplatesResponse.ItemTemplate").msgclass
  UseItemCaptureRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.UseItemCaptureRequest").msgclass
  UseItemCaptureResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.UseItemCaptureResponse").msgclass
  ReleasePokemonRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.ReleasePokemonRequest").msgclass
  ReleasePokemonResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.ReleasePokemonResponse").msgclass
  ReleasePokemonResponse::Result = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.ReleasePokemonResponse.Result").enummodule
  GetHatchedEggsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.GetHatchedEggsRequest").msgclass
  GetHatchedEggsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.GetHatchedEggsResponse").msgclass
  FortSearchRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.FortSearchRequest").msgclass
  FortSearchResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.FortSearchResponse").msgclass
  FortSearchResponse::ItemAward = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.FortSearchResponse.ItemAward").msgclass
  FortSearchResponse::Result = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.FortSearchResponse.Result").enummodule
  FortDetailsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.FortDetailsRequest").msgclass
  FortDetailsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.FortDetailsResponse").msgclass
  FortModifier = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.FortModifier").msgclass
  EncounterRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.EncounterRequest").msgclass
  EncounterResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.EncounterResponse").msgclass
  EncounterResponse::Background = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.EncounterResponse.Background").enummodule
  EncounterResponse::Status = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.EncounterResponse.Status").enummodule
  CaptureProbability = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.CaptureProbability").msgclass
  DiskEncounterRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.DiskEncounterRequest").msgclass
  DiskEncounterResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.DiskEncounterResponse").msgclass
  DiskEncounterResponse::Result = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.DiskEncounterResponse.Result").enummodule
  CatchPokemonRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.CatchPokemonRequest").msgclass
  CatchPokemonResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.CatchPokemonResponse").msgclass
  CatchPokemonResponse::CatchStatus = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.CatchPokemonResponse.CatchStatus").enummodule
  CaptureScore = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.CaptureScore").msgclass
  CheckAwardedBadgesRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.CheckAwardedBadgesRequest").msgclass
  CheckAwardedBadgesResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.CheckAwardedBadgesResponse").msgclass
  EquippedBadgeSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.EquippedBadgeSettings").msgclass
  PokemonUpgradeSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.PokemonUpgradeSettings").msgclass
  IapSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.IapSettings").msgclass
  IapItemDisplay = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.IapItemDisplay").msgclass
  EncounterSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.EncounterSettings").msgclass
  GymBattleSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.GymBattleSettings").msgclass
  GymLevelSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.GymLevelSettings").msgclass
  PlayerLevelSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.PlayerLevelSettings").msgclass
  CameraSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.CameraSettings").msgclass
  BadgeSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.BadgeSettings").msgclass
  TypeEffectiveSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.TypeEffectiveSettings").msgclass
  MoveSequenceSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.MoveSequenceSettings").msgclass
  MoveSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.MoveSettings").msgclass
  PokemonSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.PokemonSettings").msgclass
  CameraAttributes = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.CameraAttributes").msgclass
  EncounterAttributes = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.EncounterAttributes").msgclass
  StatsAttributes = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.StatsAttributes").msgclass
  ItemSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.ItemSettings").msgclass
  BattleAttributes = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.BattleAttributes").msgclass
  EggIncubatorAttributes = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.EggIncubatorAttributes").msgclass
  ExperienceBoostAttributes = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.ExperienceBoostAttributes").msgclass
  FoodAttributes = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.FoodAttributes").msgclass
  FortModifierAttributes = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.FortModifierAttributes").msgclass
  IncenseAttributes = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.IncenseAttributes").msgclass
  InventoryUpgradeAttributes = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.InventoryUpgradeAttributes").msgclass
  PokeballAttributes = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.PokeballAttributes").msgclass
  PotionAttributes = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.PotionAttributes").msgclass
  ReviveAttributes = Google::Protobuf::DescriptorPool.generated_pool.lookup("RpcSub.ReviveAttributes").msgclass
end
